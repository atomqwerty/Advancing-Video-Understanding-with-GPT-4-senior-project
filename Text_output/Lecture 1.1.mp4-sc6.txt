<scene: 6 timestamp: 00:04:29.867 - 00:05:39.867> 
It is very hard to say what makes a 2
0001
011(1112
zze
222323
3444445535
6687777888
888894999
<utterances>
 <utterance number= 40 start=0:04:30 end= 0:04:34
 Here's an example of some of the digits in emnist.
<utterance number= 41 start=0:04:34 end= 0:04:40
 These are ones that were correctly recognised by neural net, the first time it saw them.
<utterance number= 42 start=0:04:41 end= 0:04:44
 But they're ones where the neural net wasn't very confident.
<utterance number= 43 start=0:04:44 end= 0:04:46
 And you can see why.
<utterance number= 44 start=0:04:46 end= 0:04:54
 I've arranged these digits in standard scanline order, so zero is then one's end to is and so on.
<utterance number= 45 start=0:04:54 end= 0:05:00
 If you look at a bunch of twos, like the ones in the green rectangle, you can see that.
<utterance number= 46 start=0:05:00 end= 0:05:05
 If you knew they were a handwritten digit, you'd probably guess they were twos.
<utterance number= 47 start=0:05:06 end= 0:05:09
 But it's very hard to say what it is that makes them twos.
<utterance number= 48 start=0:05:09 end= 0:05:12
 There's nothing simple that they all have in common.
<utterance number= 49 start=0:05:12 end= 0:05:17
 In particular, if you try an overlay one on another, you'll see it doesn't fit.
<utterance number= 50 start=0:05:17 end= 0:05:23
 And even if you skew it a bit, it's very hard to make them overlay on each other, so template isn't going to do the job.
<utterance number= 51 start=0:05:23 end= 0:05:33
 And in particular, template is going to be very hard to find that it'll fit those twos in the green box and won't also fit the things in the red boxes.
<utterance number= 52 start=0:05:33 end= 0:05:39
 So that's one thing that makes recognising handwritten digits, a good task for machine learning.
<utterance number= 53 start=0:05:39 end= 0:05:43
 Now, I don't want you to think that's the only thing we can do.

</utterance>
</scene>
</lecture>
</course>